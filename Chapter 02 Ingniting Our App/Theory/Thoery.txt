● - What is `NPM`?
NPM is a package manager for JavaScript and Node.js that allows developers to easily install, manage, and share libraries, tools, and dependencies for their projects.

● - What is `Parcel/Webpack`? Why do we need it?
Parcel and Webpack are build tools that bundle your application's code and assets. They optimize and transform your code so that it's ready for deployment. These tools are essential for modern web development, as they handle tasks like minification, code splitting, and more.

● - What is `.parcel-cache`
.parcel-cache is a directory created by Parcel that stores cached data to speed up the build process. It helps avoid unnecessary recompilations and improves the build speed when working on the same project multiple times.

● - What is `npx` ?
npx is a tool that comes with NPM and allows you to run packages that are installed in your project's node_modules directory, as well as packages that are not globally installed.

● - What is difference between `dependencies` vs `devDependencies`
dependencies: These are packages that your project requires to run in a production environment.
devDependencies: These are packages that are only needed during development and testing. They are not included when your application is deployed.

● - What is Tree Shaking?
Tree shaking is a technique used by bundlers like Webpack and Parcel to eliminate unused code from your final bundle. This reduces the bundle size and improves performance.

● - What is Hot Module Replacement?
Hot Module Replacement (HMR) is a feature in bundlers like Webpack and Parcel that allows modules to be replaced or updated in real-time without a full page reload. It speeds up development by preserving the application state while applying changes.

● - List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
Zero Configuration: Parcel eliminates complex setup.
Automatic Asset Handling: Parcel seamlessly manages assets.
Blazing Speed: Intelligent caching and parallel processing for faster builds.
Image Optimization
HMS(Hot Module Replacement)

● - What is `.gitignore`? What should we add and not add into it?
.gitignore is a file that specifies which files and directories should be ignored by version control systems like Git. It helps prevent unnecessary files from being committed to the repository.

● - What is the difference between `package.json` and `package-lock.json`
𝐏𝐚𝐜𝐤𝐚𝐠𝐞.𝐣𝐬𝐨𝐧: It is created after using npm init and it contains project name, version and dependencies.
𝐏𝐚𝐜𝐤𝐚𝐠𝐞-𝐥𝐨𝐜𝐤.𝐣𝐬𝐨𝐧: it gets automatically generated by npm when a package is installed, also it records the exact version of every installed dependency and sub-dependencies.


● - Why should I not modify `package-lock.json`?
You should avoid manually modifying package-lock.json because it's auto-generated and designed to maintain consistency across installations.

● - What is `node_modules` ? Is it a good idea to push that on git?
node_modules is a directory where NPM stores project dependencies. It's not recommended to push it to Git due to its large size and the fact that dependencies can be easily installed on other machines.

● - What is the `dist` folder?
The dist (short for "distribution") folder contains the optimized and minified code that is ready for deployment. It's the version of your application that you'll actually serve to users.

● - What is `browserlists`
A browserlist is a configuration file used by tools like Babel and Autoprefixer to determine which browsers and versions to support when compiling and prefixing your CSS and JavaScript.

Read about dif bundlers: vite, webpack, parcel
● Read about: ^ - caret and ~ - tilda
Caret (^): It is used for automatically updating the minor updates along with patch updates. 1.2.0 -> 1.3.5
Tilde(~): freezes the major version and minor version. 1.2.0 -> 1.2.1
● Read about Script types in html (MDN Docs)